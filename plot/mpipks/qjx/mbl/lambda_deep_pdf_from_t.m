clear all;

home_figures_path = '/home/denysov/yusipov/os_d/figures';
data_path = '/data/biophys/denysov/yusipov/os_d/data/qjx';

sys_id = 3;
task_id = 7;
prop_id = 0;

ex_deep = 16;
rk_ns = 10000;
num_tp_periods = 1000;
num_obs_periods = 100000;

Nc = 8;

W_seed_s = 1;
W_seed_num = 100;
W_seed_f = W_seed_s + W_seed_num - 1;
W_mns = 1000000;

diss_type = 1;
diss_phase = 0.0;
diss_gamma = 0.1;

W = 2;
U = 1;
J = 1;

start_type = 0;
start_state = 49;

lpn_type = 0;
lpn_delta_f_h = 1e-4;
lpn_delta_s = 1e-6;
lpn_delta_f_l = 1e-8;

ss = 0;
mns = 1000000;

num_trajectories = 200;
num_target_trajectories = num_trajectories / 2;
num_runs = 1;

path_to_folder = sprintf('%s/main_%d_%d_%d/lpn_%d_%0.4f_%0.4f_%0.4f/run_%d_%d_%d_%d/Nс_%d/rnd_%d_%d/diss_%d_%0.4f_%0.4f/prm_%0.4f_%0.4f_%0.4f/start_%d_%d/ss_%d', ...
    data_path, ...
    sys_id, ...
    task_id, ...
    prop_id, ...
    lpn_type, ...
    log10(lpn_delta_s), ...
    log10(lpn_delta_f_h), ...
    log10(lpn_delta_f_l), ...
    ex_deep, ...
    rk_ns, ...
    num_tp_periods, ...
    num_obs_periods, ...
    Nc, ...
    1, ...
    W_mns, ...
    diss_type, ...
    diss_phase, ...
    diss_gamma, ...
    W, ...
    U, ...
    J, ...
    start_type, ...
    start_state, ...
    ss);

suffix = sprintf('setup(%d_%d_%d)_rnd(%d_%d)_Nc(%d)_rnd(%d_%d)_diss(%d_%0.4f_%0.4f)_prm(%0.4f_%0.4f_%0.4f)_start(%d_%d)_lpn(%d_%0.4f_%0.4f_%0.4f)', ...
    sys_id, ...
    task_id, ...
    prop_id, ...
    ss, ...
    mns, ...
    Nc, ...
    1, ...
    W_mns, ...
    diss_type, ...
    diss_phase, ...
    diss_gamma, ...
    W, ...
    U, ...
    J, ...
    start_type, ...
    start_state, ...
    lpn_type, ...
    log10(lpn_delta_s), ...
    log10(lpn_delta_f_h), ...
    log10(lpn_delta_f_l));

fn = sprintf('%s/periods_%s.txt', path_to_folder, suffix);
periods = importdata(fn);
num_periods = size(periods, 1);

all_lambdas = zeros(num_periods, num_target_trajectories * W_seed_num);

W_seed_id = 1;
for W_seed = W_seed_s : W_seed_f    
    for run_id = 1:num_runs
        
        ss = (run_id - 1) * num_trajectories;
        
        path_to_folder = sprintf('%s/main_%d_%d_%d/lpn_%d_%0.4f_%0.4f_%0.4f/run_%d_%d_%d_%d/Nс_%d/rnd_%d_%d/diss_%d_%0.4f_%0.4f/prm_%0.4f_%0.4f_%0.4f/start_%d_%d/ss_%d', ...
            data_path, ...
            sys_id, ...
            task_id, ...
            prop_id, ...
            lpn_type, ...
            log10(lpn_delta_s), ...
            log10(lpn_delta_f_h), ...
            log10(lpn_delta_f_l), ...
            ex_deep, ...
            rk_ns, ...
            num_tp_periods, ...
            num_obs_periods, ...
            Nc, ...
            W_seed, ...
            W_mns, ...
            diss_type, ...
            diss_phase, ...
            diss_gamma, ...
            W, ...
            U, ...
            J, ...
            start_type, ...
            start_state, ...
            ss);
        
        suffix = sprintf('setup(%d_%d_%d)_rnd(%d_%d)_Nc(%d)_rnd(%d_%d)_diss(%d_%0.4f_%0.4f)_prm(%0.4f_%0.4f_%0.4f)_start(%d_%d)_lpn(%d_%0.4f_%0.4f_%0.4f)', ...
            sys_id, ...
            task_id, ...
            prop_id, ...
            ss, ...
            mns, ...
            Nc, ...
            W_seed, ...
            W_mns, ...
            diss_type, ...
            diss_phase, ...
            diss_gamma, ...
            W, ...
            U, ...
            J, ...
            start_type, ...
            start_state, ...
            lpn_type, ...
            log10(lpn_delta_s), ...
            log10(lpn_delta_f_h), ...
            log10(lpn_delta_f_l));
        
        fn = sprintf('%s/lambda_evo_%s.txt', path_to_folder, suffix);
        data = importdata(fn);
		
		tr_start = (W_seed_id - 1) * num_target_trajectories + 1;
		tr_finish = W_seed_id * num_target_trajectories;
		
        all_lambdas(:,  tr_start : tr_finish) = data(:, num_target_trajectories + 1 : end);
		
		W_seed_id  = W_seed_id + 1;

    end
end

lambda_min = min(min(all_lambdas)) - 1e-10
lambda_max = max(max(all_lambdas)) + 1e-10
lambda_num_bins = 200;
lambda_shift = (lambda_max - lambda_min) / lambda_num_bins;
lambda_bins = linspace(lambda_min + 0.5 * lambda_shift, lambda_max - 0.5 * lambda_shift, lambda_num_bins);

lambdas_2d_pdf = zeros(num_periods, lambda_num_bins);

for t_id = 1:num_periods
    for l_id = 1:num_target_trajectories * W_seed_num
        curr_l = all_lambdas(t_id, l_id);
        curr_id = floor((curr_l - lambda_min) / (lambda_max - lambda_min) * lambda_num_bins) + 1;
        lambdas_2d_pdf(t_id, curr_id) = lambdas_2d_pdf(t_id, curr_id) + 1;
    end
    
    curr_max = max(lambdas_2d_pdf(t_id, :));
    lambdas_2d_pdf(t_id, :) = lambdas_2d_pdf(t_id, :) / curr_max;
end

suffix_save =  sprintf('setup(%d_%d_%d)_Nc(%d)_rnd(%d_%d)_diss(%d_%0.4f_%0.4f)_prm(%0.4f_%0.4f_%0.4f)_start(%d_%d)_lpn(%d_%0.4f_%0.4f_%0.4f)', ...
    sys_id, ...
    task_id, ...
    prop_id, ...
    Nc, ...
    W_seed, ...
    W_mns, ...
    diss_type, ...
    diss_phase, ...
    diss_gamma, ...
	W, ...
    U, ...
    J, ...
    start_type, ...
    start_state, ...
	lpn_type, ...
    log10(lpn_delta_s), ...
    log10(lpn_delta_f_h), ...
    log10(lpn_delta_f_l));

fig = figure;
hLine = imagesc(periods, lambda_bins, lambdas_2d_pdf');
set(gca, 'FontSize', 30);
xlabel('$t$', 'Interpreter', 'latex');
set(gca, 'FontSize', 30);
ylabel('$\lambda$', 'Interpreter', 'latex');
colormap hot;
h = colorbar;
set(gca, 'FontSize', 30);
title(h, 'PDF', 'Interpreter', 'latex');
set(gca,'YDir','normal');
savefig(sprintf('%s/lambda_deep_pdf_from_t_%s.fig', home_figures_path, suffix_save));
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition', [0 0 1 1]);
print(gcf, '-dpdf', sprintf('%s/lambda_deep_pdf_from_t_%s.pdf', home_figures_path, suffix_save));
close(fig)

