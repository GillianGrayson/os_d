clear all;

home_figures_path = '/home/yusipov/Work/os_d/figures';

data_path = '/data/biophys/yusipov/os_d';
prefix = 'qjx_results';

data_path = sprintf('%s/%s', data_path, prefix);

sys_id = 0;
task_id = 0;
prop_id = 0;
num_trajectories = 10;
num_tp_periods = 1200;
num_obs_periods = 1000;
mns = 1000000;
ex_deep = 16;
rk_ns = 10000;

lpn_eps = 1.0e-2;
lpn_delta_up = 1.0e-2;
N = 100;
diss_type = 0;
diss_gamma = 0.1;
diss_phase = 0.0;
drv_dimer_type = 0;
drv_dimer_ampl = 1.3;
drv_dimer_freq = 1.0;
drv_dimer_phase = 0.0;
start_type = 0;
start_state = 0;
prm_dimer_E = 1.0;
prm_dimer_U = 0;
prm_dimer_J = 1.0;

sys_size = N + 1;

num_runs = 1;

U_begin = 0.001;
U_step = 0.001;
U_num = 1000;

Us = zeros(U_num, 1);
lambdas = zeros(U_num, 1);

for U_id = 1:U_num
	
	U_id = U_id
	U = U_begin + U_step * (U_id - 1);
	Us(U_id) = U;
   
	curr_lambda_avg = 0;
   
	for run_id = 1:num_runs
		
		ss = (run_id - 1) * num_trajectories;
		
		path_to_folder = sprintf('%s/main_%d_%d_%d/run_%d_%d_%d_%d/lpn_%0.4f/N_%d/diss_%d_%0.4f_%0.4f/drv_%d_%0.4f_%0.4f_%0.4f/prm_%0.4f_%0.4f_%0.4f/start_%d_%d/ss_%d', ...
			data_path, ...
			sys_id, ...
			task_id, ...
			prop_id, ...
			ex_deep, ...
			rk_ns, ...
			num_tp_periods, ...
			num_obs_periods, ...
			lpn_delta_up, ...
			N, ...
			diss_type, ...
			diss_gamma, ...
			diss_phase, ...
			drv_dimer_type, ...
			drv_dimer_ampl, ...
			drv_dimer_freq, ...
			drv_dimer_phase, ...
			prm_dimer_E, ...
			U, ...
			prm_dimer_J, ...
			start_type, ...
			start_state, ...
			ss);
		
		suffix = sprintf('config(%d_%d_%d)_rnd(%d_%d)_N(%d)_diss(%d_%0.4f_%0.4f)_drv(%d_%0.4f_%0.4f_%0.4f)_prm(%0.4f_%0.4f_%0.4f)_start(%d_%d)', ...
			sys_id, ...
			task_id, ...
			prop_id, ...
			ss, ...
			mns, ...
			N, ...
			diss_type, ...
			diss_gamma, ...
			diss_phase, ...
			drv_dimer_type, ...
			drv_dimer_ampl, ...
			drv_dimer_freq, ...
			drv_dimer_phase, ...
			prm_dimer_E, ...
			U, ...
			prm_dimer_J, ...
			start_type, ...
			start_state);
	   
	  
		path = sprintf('%s/lambda_%s.txt', path_to_folder, suffix);
		data = importdata(path);
		
		tmp_avg = sum(data(2:end)) / (num_trajectories - 1);
	   
		curr_lambda_avg = curr_lambda_avg + data(dump_id, 2);
	end
   
	curr_lambda_avg = curr_lambda_avg / num_runs;
   
	lambdas(U_id) = curr_lambda_avg;
	
end

fig = figure;
if (U_num == 1)
	hLine = scatter(Us, lambdas);
else
	hLine = plot(Us, lambdas);
end
set(gca, 'FontSize', 30);
xlabel('$U$', 'Interpreter', 'latex');
set(gca, 'FontSize', 30);
ylabel('$\lambda$', 'Interpreter', 'latex');

suffix = sprintf('task(%d_%d_%d)_tp(%d)_dump(%d)_ns(%d)_lpn(%0.4f_%0.4f)_qj(%d_%d)_N(%d)_diss(%d_%0.4f_%0.4f)_drv(%d_%0.4f_%0.4f_%0.4f)_prm(%0.4f_%0.4f_%0.4f)_start(%d_%d)', ...
			sys_id, ...
			prop_id, ...
			task_id, ...
			num_tp_periods, ...
			dump_id, ...
			num_runs * num_trajectories, ...
			lpn_eps, ...
			lpn_delta_up, ...
			ex_deep, ...
			rk_ns, ...
			N, ...
			diss_type, ...
			diss_gamma, ...
			diss_phase, ...
			drv_dimer_type, ...
			drv_dimer_ampl, ...
			drv_dimer_freq, ...
			drv_dimer_phase, ...
			prm_dimer_E, ...
			prm_dimer_U, ...
			prm_dimer_J, ...
			start_type, ...
			start_state);
		
savefig(sprintf('%s/lambda_%s.fig', home_figures_path, suffix));
